--- ../src-base/minecraft/net/minecraft/block/Block.java
+++ ../src-work/minecraft/net/minecraft/block/Block.java
@@ -573,6 +573,8 @@
 
             for (ItemStack drop : drops)
             {
+                // CraftBukkit - <= to < to allow for plugins to completely disable block drops from explosions
+            	//Lava-test - revert back to original code, handle this special case in Forge code
                 if (worldIn.rand.nextFloat() <= chance)
                 {
                     spawnAsEntity(worldIn, pos, drop);
@@ -597,9 +599,19 @@
             EntityItem entityitem = new EntityItem(worldIn, (double)pos.getX() + d0, (double)pos.getY() + d1, (double)pos.getZ() + d2, stack);
             entityitem.setDefaultPickupDelay();
             worldIn.spawnEntity(entityitem);
+            //Lava-test - use only forge version of capturedDrops
+            /*if (worldIn.captureDrops != null) {
+                worldIn.captureDrops.add(entityitem);
+            } else {
+                worldIn.spawnEntity(entityitem);
+            }*/
         }
     }
 
+    public int getExpDrop(World world, IBlockState state, int enchantmentLevel) { //TODO ???
+        return 0;
+    }
+
     public void dropXpOnBlockBreak(World worldIn, BlockPos pos, int amount)
     {
         if (!worldIn.isRemote && worldIn.getGameRules().getBoolean("doTileDrops"))
@@ -608,7 +620,7 @@
             {
                 int i = EntityXPOrb.getXPSplit(amount);
                 amount -= i;
-                worldIn.spawnEntity(new EntityXPOrb(worldIn, (double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D, i));
+                worldIn.spawnEntity(new EntityXPOrb(worldIn, (double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D, i, org.bukkit.entity.ExperienceOrb.SpawnReason.BLOCK_BREAK, null)); //Paper - add SpawnReason
             }
         }
     }
