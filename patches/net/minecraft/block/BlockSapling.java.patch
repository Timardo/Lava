--- ../src-base/minecraft/net/minecraft/block/BlockSapling.java
+++ ../src-work/minecraft/net/minecraft/block/BlockSapling.java
@@ -30,6 +30,7 @@
     public static final PropertyEnum<BlockPlanks.EnumType> TYPE = PropertyEnum.<BlockPlanks.EnumType>create("type", BlockPlanks.EnumType.class);
     public static final PropertyInteger STAGE = PropertyInteger.create("stage", 0, 1);
     protected static final AxisAlignedBB SAPLING_AABB = new AxisAlignedBB(0.09999999403953552D, 0.0D, 0.09999999403953552D, 0.8999999761581421D, 0.800000011920929D, 0.8999999761581421D);
+    public static org.bukkit.TreeType treeType; // CraftBukkit
 
     protected BlockSapling()
     {
@@ -56,7 +57,28 @@
             if (!worldIn.isAreaLoaded(pos, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
             if (worldIn.getLightFromNeighbors(pos.up()) >= 9 && rand.nextInt(7) == 0)
             {
+                worldIn.captureTreeGeneration = true; //Craftbukkit
                 this.grow(worldIn, pos, state, rand);
+                //Craftbukkit start - event TODO investigate and use forge capturing
+                worldIn.captureTreeGeneration = false;
+                if (worldIn.capturedBlockStates.size() > 0) {
+                    org.bukkit.TreeType treeType = BlockSapling.treeType;
+                    BlockSapling.treeType = null;
+                    org.bukkit.Location location = new org.bukkit.Location(worldIn.getWorld(), pos.getX(), pos.getY(), pos.getZ());
+                    java.util.List<org.bukkit.block.BlockState> blocks = (java.util.List<org.bukkit.block.BlockState>) worldIn.capturedBlockStates.clone();
+                    worldIn.capturedBlockStates.clear();
+                    org.bukkit.event.world.StructureGrowEvent event = null;
+                    if (treeType != null) {
+                        event = new org.bukkit.event.world.StructureGrowEvent(location, treeType, false, null, blocks);
+                        org.bukkit.Bukkit.getPluginManager().callEvent(event);
+                    }
+                    if (event == null || !event.isCancelled()) {
+                        for (org.bukkit.block.BlockState blockstate : blocks) {
+                            blockstate.update(true);
+                        }
+                    }
+                }
+                //Craftbukkit end
             }
         }
     }
@@ -76,7 +98,18 @@
     public void generateTree(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (!net.minecraftforge.event.terraingen.TerrainGen.saplingGrowTree(worldIn, rand, pos)) return;
+        //Lava-test - set treeType in saplingGrowTree event
+        // CraftBukkit start - Turn ternary operator into if statement to set treeType
         WorldGenerator worldgenerator = (WorldGenerator)(rand.nextInt(10) == 0 ? new WorldGenBigTree(true) : new WorldGenTrees(true));
+        /*WorldGenerator worldgenerator;
+        if (rand.nextInt(10) == 0) {
+            treeType = org.bukkit.TreeType.BIG_TREE;
+            worldgenerator = new WorldGenBigTree(true);
+        } else {
+            treeType = org.bukkit.TreeType.TREE;
+            worldgenerator = new WorldGenTrees(true);
+        }*/
+        // CraftBukkit end
         int i = 0;
         int j = 0;
         boolean flag = false;
@@ -92,6 +125,7 @@
                     {
                         if (this.isTwoByTwoOfType(worldIn, pos, i, j, BlockPlanks.EnumType.SPRUCE))
                         {
+                            treeType = org.bukkit.TreeType.MEGA_REDWOOD; // CraftBukkit
                             worldgenerator = new WorldGenMegaPineTree(false, rand.nextBoolean());
                             flag = true;
                             break label68;
@@ -103,11 +137,13 @@
                 {
                     i = 0;
                     j = 0;
+                    treeType = org.bukkit.TreeType.REDWOOD; // CraftBukkit
                     worldgenerator = new WorldGenTaiga2(true);
                 }
 
                 break;
             case BIRCH:
+                treeType = org.bukkit.TreeType.BIRCH; // CraftBukkit
                 worldgenerator = new WorldGenBirchTree(true, false);
                 break;
             case JUNGLE:
@@ -121,6 +157,7 @@
                     {
                         if (this.isTwoByTwoOfType(worldIn, pos, i, j, BlockPlanks.EnumType.JUNGLE))
                         {
+                            treeType = org.bukkit.TreeType.JUNGLE; // CraftBukkit
                             worldgenerator = new WorldGenMegaJungle(true, 10, 20, iblockstate, iblockstate1);
                             flag = true;
                             break label82;
@@ -132,11 +169,13 @@
                 {
                     i = 0;
                     j = 0;
+                    treeType = org.bukkit.TreeType.SMALL_JUNGLE; // CraftBukkit
                     worldgenerator = new WorldGenTrees(true, 4 + rand.nextInt(7), iblockstate, iblockstate1, false);
                 }
 
                 break;
             case ACACIA:
+                treeType = org.bukkit.TreeType.ACACIA; // CraftBukkit
                 worldgenerator = new WorldGenSavannaTree(true);
                 break;
             case DARK_OAK:
@@ -148,6 +187,7 @@
                     {
                         if (this.isTwoByTwoOfType(worldIn, pos, i, j, BlockPlanks.EnumType.DARK_OAK))
                         {
+                            treeType = org.bukkit.TreeType.DARK_OAK; // CraftBukkit
                             worldgenerator = new WorldGenCanopyTree(true);
                             flag = true;
                             break label96;
