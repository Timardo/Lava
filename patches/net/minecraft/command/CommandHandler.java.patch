--- ../src-base/minecraft/net/minecraft/command/CommandHandler.java
+++ ../src-work/minecraft/net/minecraft/command/CommandHandler.java
@@ -144,11 +144,18 @@
 
     protected abstract MinecraftServer getServer();
 
-    public ICommand registerCommand(ICommand command)
-    {
+    public ICommand registerCommand(ICommand command) {
         this.commandMap.put(command.getName(), command);
         this.commandSet.add(command);
 
+        //Lava-test start - preserve original code block + add NPE check
+        if (command.getAliases() == null)
+        {
+            registerBukkitCommand(command, command.getClass().getName());
+            return command;
+        }
+        //Lava-test end
+        
         for (String s : command.getAliases())
         {
             ICommand icommand = this.commandMap.get(s);
@@ -158,10 +165,29 @@
                 this.commandMap.put(s, command);
             }
         }
+        
+        registerBukkitCommand(command, command.getClass().getName()); //Lava-test - register in Bukkit too
 
         return command;
     }
 
+    //Lava-test method - based on Craftbukkit
+    public void registerBukkitCommand(ICommand command, String permissionNode)
+    {
+        org.bukkit.craftbukkit.command.CraftSimpleCommandMap craftCommandMap = MinecraftServer.getServerCB().server.getCraftCommandMap();
+        org.bukkit.craftbukkit.command.ModCustomCommand customCommand = new org.bukkit.craftbukkit.command.ModCustomCommand(command.getName()); //TODO investigate
+        customCommand.setPermission(permissionNode);
+        List<String> list = command.getAliases();
+        
+        if (list != null) 
+        {    
+            customCommand.setAliases(list);
+        }
+        
+        craftCommandMap.register(command.getName(), customCommand);
+        LogManager.getLogger().info("Registered command " + command.getName() + " with permission node " + permissionNode); //TODO change to internal logger? (bukkit, forge, lava?)
+    }
+
     private static String[] dropFirstString(String[] input)
     {
         String[] astring = new String[input.length - 1];
