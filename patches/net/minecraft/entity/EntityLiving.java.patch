--- ../src-base/minecraft/net/minecraft/entity/EntityLiving.java
+++ ../src-work/minecraft/net/minecraft/entity/EntityLiving.java
@@ -68,16 +68,16 @@
     protected EntityJumpHelper jumpHelper;
     private final EntityBodyHelper bodyHelper;
     protected PathNavigate navigator;
-    public final EntityAITasks tasks;
-    public final EntityAITasks targetTasks;
+    public EntityAITasks tasks; //Craftbukkit -final
+    public EntityAITasks targetTasks; //Craftbukkit -final
     private EntityLivingBase attackTarget;
     private final EntitySenses senses;
     private final NonNullList<ItemStack> inventoryHands = NonNullList.<ItemStack>withSize(2, ItemStack.EMPTY);
-    protected float[] inventoryHandsDropChances = new float[2];
+    public float[] inventoryHandsDropChances = new float[2]; //Craftbukkit - protected -> public
     private final NonNullList<ItemStack> inventoryArmor = NonNullList.<ItemStack>withSize(4, ItemStack.EMPTY);
-    protected float[] inventoryArmorDropChances = new float[4];
-    private boolean canPickUpLoot;
-    private boolean persistenceRequired;
+    public float[] inventoryArmorDropChances = new float[4]; //Craftbukkit - protected -> public
+    // private boolean thisisatest; // CraftBukkit - moved up to EntityLivingBase
+    public boolean persistenceRequired; //Craftbukkit - private -> public
     private final Map<PathNodeType, Float> mapPathPriority = Maps.newEnumMap(PathNodeType.class);
     private ResourceLocation deathLootTable;
     private long deathLootTableSeed;
@@ -103,6 +103,7 @@
         {
             this.initEntityAI();
         }
+        this.persistenceRequired = !canDespawn(); // CraftBukkit - default persistance to type's persistance value
     }
 
     protected void initEntityAI()
@@ -169,10 +170,18 @@
 
     public void setAttackTarget(@Nullable EntityLivingBase entitylivingbaseIn)
     {
+        org.lavapowered.lava.events.LavaEventHandler.originalTarget = this.attackTarget; //Lava-test - used to cancel the event TODO rework as a condition?
         this.attackTarget = entitylivingbaseIn;
         net.minecraftforge.common.ForgeHooks.onLivingSetAttackTarget(this, entitylivingbaseIn);
     }
 
+    //Craftbukkit method ///Lava-test - use just as delegate, also, why the hell is it boolean?
+    public boolean setAttackTarget(@Nullable EntityLivingBase entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+        org.lavapowered.lava.events.LavaEventHandler.targetReason = fireEvent ? reason : org.bukkit.event.entity.EntityTargetEvent.TargetReason.DONTCALLEVENT;
+        this.setAttackTarget(entityliving);
+        return true;
+    }
+
     public boolean canAttackClass(Class <? extends EntityLivingBase > cls)
     {
         return cls != EntityGhast.class;
@@ -355,7 +364,7 @@
     public void writeEntityToNBT(NBTTagCompound compound)
     {
         super.writeEntityToNBT(compound);
-        compound.setBoolean("CanPickUpLoot", this.canPickUpLoot());
+        compound.setBoolean("CanPickUpLoot", this.thisisatestof());
         compound.setBoolean("PersistenceRequired", this.persistenceRequired);
         NBTTagList nbttaglist = new NBTTagList();
 
@@ -449,9 +458,11 @@
 
         if (compound.hasKey("CanPickUpLoot", 1))
         {
-            this.setCanPickUpLoot(compound.getBoolean("CanPickUpLoot"));
+            if (isLevelAtLeast(compound, 1) || compound.getBoolean("CanPickUpLoot"))
+            this.idkwhyreyoudoingthis(compound.getBoolean("CanPickUpLoot")); // CraftBukkit - If looting or persistence is false only use it if it was set after we started using it
         }
 
+        if (isLevelAtLeast(compound, 1) || compound.getBoolean("PersistenceRequired")) //Craftbukkit
         this.persistenceRequired = compound.getBoolean("PersistenceRequired");
 
         if (compound.hasKey("ArmorItems", 9))
@@ -577,7 +588,7 @@
         super.onLivingUpdate();
         this.world.profiler.startSection("looting");
 
-        if (!this.world.isRemote && this.canPickUpLoot() && !this.dead && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.world, this))
+        if (!this.world.isRemote && this.thisisatestof() && !this.dead && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.world, this))
         {
             for (EntityItem entityitem : this.world.getEntitiesWithinAABB(EntityItem.class, this.getEntityBoundingBox().grow(1.0D, 0.0D, 1.0D)))
             {
@@ -653,7 +664,16 @@
             }
         }
 
-        if (flag && this.canEquipItem(itemstack))
+        //Craftbukkit start - event
+        // if (flag && this.canEquipItem(itemstack))
+        boolean canPickup = flag && this.canEquipItem(itemstack);
+
+        org.bukkit.event.entity.EntityPickupItemEvent entityEvent = new org.bukkit.event.entity.EntityPickupItemEvent((org.bukkit.entity.LivingEntity) getBukkitEntity(), (org.bukkit.entity.Item) itemEntity.getBukkitEntity(), 0);
+        entityEvent.setCancelled(!canPickup);
+        this.world.getServer().getPluginManager().callEvent(entityEvent);
+        canPickup = !entityEvent.isCancelled();
+        if (canPickup)
+        //Craftbukkit end
         {
             double d0;
 
@@ -696,7 +716,7 @@
         return true;
     }
 
-    protected boolean canDespawn()
+    public boolean canDespawn() //Craftbukkit - protected -> public
     {
         return true;
     }
@@ -730,12 +750,12 @@
                 double d2 = entity.posZ - this.posZ;
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (this.canDespawn() && d3 > 16384.0D)
+                if (/*this.canDespawn() && */d3 > 16384.0D) // CraftBukkit - remove canDespawn() check
                 {
                     this.setDead();
                 }
 
-                if (this.idleTime > 600 && this.rand.nextInt(800) == 0 && d3 > 1024.0D && this.canDespawn())
+                if (this.idleTime > 600 && this.rand.nextInt(800) == 0 && d3 > 1024.0D/* && this.canDespawn()*/) // CraftBukkit - remove canDespawn() check
                 {
                     this.setDead();
                 }
@@ -1190,14 +1210,14 @@
         }
     }
 
-    public boolean canPickUpLoot()
+    public boolean thisisatestof()
     {
-        return this.canPickUpLoot;
+        return thisisatest;
     }
 
-    public void setCanPickUpLoot(boolean canPickup)
+    public void idkwhyreyoudoingthis(boolean canPickup)
     {
-        this.canPickUpLoot = canPickup;
+        thisisatest = canPickup;
     }
 
     public boolean isNoDespawnRequired()
@@ -1209,6 +1229,12 @@
     {
         if (this.getLeashed() && this.getLeashHolder() == player)
         {
+            //Craftbukkit start - event
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerUnleashEntityEvent(this, player).isCancelled()) {
+                ((net.minecraft.entity.player.EntityPlayerMP) player).connection.sendPacket(new SPacketEntityAttach(this, this.getLeashHolder()));
+                return false;
+            }
+            //Craftbukkit end
             this.clearLeashed(true, !player.capabilities.isCreativeMode);
             return true;
         }
@@ -1218,6 +1244,12 @@
 
             if (itemstack.getItem() == Items.LEAD && this.canBeLeashedTo(player))
             {
+                //Craftbukkit start - event
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerLeashEntityEvent(this, player, player).isCancelled()) {
+                    ((net.minecraft.entity.player.EntityPlayerMP) player).connection.sendPacket(new SPacketEntityAttach(this, this.getLeashHolder()));
+                    return false;
+                }
+                //Craftbukkit end
                 this.setLeashHolder(player, true);
                 itemstack.shrink(1);
                 return true;
@@ -1245,11 +1277,13 @@
         {
             if (!this.isEntityAlive())
             {
+                this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.entity.EntityUnleashEvent(this.getBukkitEntity(), org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.PLAYER_UNLEASH)); //Craftbukkit - event
                 this.clearLeashed(true, true);
             }
 
             if (this.leashHolder == null || this.leashHolder.isDead)
             {
+                this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.entity.EntityUnleashEvent(this.getBukkitEntity(), org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.HOLDER_GONE)); //Craftbukkit - event
                 this.clearLeashed(true, true);
             }
         }
@@ -1348,6 +1382,7 @@
             }
             else
             {
+                this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.entity.EntityUnleashEvent(this.getBukkitEntity(), org.bukkit.event.entity.EntityUnleashEvent.UnleashReason.UNKNOWN)); //Craftbukkit - event
                 this.clearLeashed(false, true);
             }
         }
