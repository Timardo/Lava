--- ../src-base/minecraft/net/minecraft/entity/effect/EntityLightningBolt.java
+++ ../src-work/minecraft/net/minecraft/entity/effect/EntityLightningBolt.java
@@ -18,8 +18,10 @@
     private int lightningState;
     public long boltVertex;
     private int boltLivingTime;
-    private final boolean effectOnly;
+    public final boolean effectOnly; //Lava-test - private -> public
 
+    public boolean isSilent = false; // Spigot
+
     public EntityLightningBolt(World worldIn, double x, double y, double z, boolean effectOnlyIn)
     {
         super(worldIn);
@@ -34,7 +36,12 @@
         {
             if (worldIn.getBlockState(blockpos).getMaterial() == Material.AIR && Blocks.FIRE.canPlaceBlockAt(worldIn, blockpos))
             {
-                worldIn.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                //Craftbukkit start - add event
+                // worldIn.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBlockIgniteEvent(world, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this).isCancelled()) {
+                    world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                }
+                //Craftbukkit end
             }
 
             for (int i = 0; i < 4; ++i)
@@ -43,12 +50,25 @@
 
                 if (worldIn.getBlockState(blockpos1).getMaterial() == Material.AIR && Blocks.FIRE.canPlaceBlockAt(worldIn, blockpos1))
                 {
-                    worldIn.setBlockState(blockpos1, Blocks.FIRE.getDefaultState());
+                    //Craftbukkit start - event
+                    // worldIn.setBlockState(blockpos1, Blocks.FIRE.getDefaultState());
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBlockIgniteEvent(world, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ(), this).isCancelled()) {
+                        world.setBlockState(blockpos1, Blocks.FIRE.getDefaultState());
+                    }
+                    //Craftbukkit end
                 }
             }
         }
     }
 
+    // Spigot start
+    public EntityLightningBolt(World world, double d0, double d1, double d2, boolean isEffect, boolean isSilent)
+    {
+        this( world, d0, d1, d2, isEffect );
+        this.isSilent = isSilent;
+    }
+    // Spigot end
+
     public SoundCategory getSoundCategory()
     {
         return SoundCategory.WEATHER;
@@ -58,9 +78,26 @@
     {
         super.onUpdate();
 
-        if (this.lightningState == 2)
+        if (!isSilent && this.lightningState == 2) // Spigot
         {
-            this.world.playSound((EntityPlayer)null, this.posX, this.posY, this.posZ, SoundEvents.ENTITY_LIGHTNING_THUNDER, SoundCategory.WEATHER, 10000.0F, 0.8F + this.rand.nextFloat() * 0.2F);
+            // CraftBukkit start - Use relative location for far away sounds
+            // this.world.playSound((EntityPlayer)null, this.posX, this.posY, this.posZ, SoundEvents.ENTITY_LIGHTNING_THUNDER, SoundCategory.WEATHER, 10000.0F, 0.8F + this.rand.nextFloat() * 0.2F);
+            float pitch = 0.8F + this.rand.nextFloat() * 0.2F;
+            int viewDistance = ((net.minecraft.world.WorldServer) this.world).getServer().getViewDistance() * 16;
+            for (net.minecraft.entity.player.EntityPlayerMP player : (List<net.minecraft.entity.player.EntityPlayerMP>) (List) this.world.playerEntities) {
+                double deltaX = this.posX - player.posX;
+                double deltaZ = this.posZ - player.posZ;
+                double distanceSquared = deltaX * deltaX + deltaZ * deltaZ;
+                if (distanceSquared > viewDistance * viewDistance) {
+                    double deltaLength = Math.sqrt(distanceSquared);
+                    double relativeX = player.posX + (deltaX / deltaLength) * viewDistance;
+                    double relativeZ = player.posZ + (deltaZ / deltaLength) * viewDistance;
+                    player.connection.sendPacket(new net.minecraft.network.play.server.SPacketSoundEffect(SoundEvents.ENTITY_LIGHTNING_THUNDER, SoundCategory.WEATHER, relativeX, this.posY, relativeZ, 10000.0F, pitch));
+                } else {
+                    player.connection.sendPacket(new net.minecraft.network.play.server.SPacketSoundEffect(SoundEvents.ENTITY_LIGHTNING_THUNDER, SoundCategory.WEATHER, this.posX, this.posY, this.posZ, 10000.0F, pitch));
+                }
+            }
+            //Craftbukkit end
             this.world.playSound((EntityPlayer)null, this.posX, this.posY, this.posZ, SoundEvents.ENTITY_LIGHTNING_IMPACT, SoundCategory.WEATHER, 2.0F, 0.5F + this.rand.nextFloat() * 0.2F);
         }
 
@@ -84,7 +121,12 @@
 
                     if (this.world.getGameRules().getBoolean("doFireTick") && this.world.isAreaLoaded(blockpos, 10) && this.world.getBlockState(blockpos).getMaterial() == Material.AIR && Blocks.FIRE.canPlaceBlockAt(this.world, blockpos))
                     {
-                        this.world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                        //Craftbukkit start - add event
+                        //this.world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                        if (!effectOnly && !org.bukkit.craftbukkit.event.CraftEventFactory.callBlockIgniteEvent(world, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this).isCancelled()) {
+                            this.world.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                        }
+                        //Craftbukkit end
                     }
                 }
             }
