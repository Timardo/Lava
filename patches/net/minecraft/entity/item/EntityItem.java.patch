--- ../src-base/minecraft/net/minecraft/entity/item/EntityItem.java
+++ ../src-work/minecraft/net/minecraft/entity/item/EntityItem.java
@@ -32,7 +32,7 @@
     private static final Logger LOGGER = LogManager.getLogger();
     private static final DataParameter<ItemStack> ITEM = EntityDataManager.<ItemStack>createKey(EntityItem.class, DataSerializers.ITEM_STACK);
     private int age;
-    private int pickupDelay;
+    public int pickupDelay; //Craftbukkit private -> public 
     private int health;
     private String thrower;
     private String owner;
@@ -43,6 +43,8 @@
      */
     public int lifespan = 6000;
 
+    private int lastTick = net.minecraft.server.MinecraftServer.currentTick - 1; // CraftBukkit
+
     public EntityItem(World worldIn, double x, double y, double z)
     {
         super(worldIn);
@@ -93,10 +95,12 @@
         {
             super.onUpdate();
 
-            if (this.pickupDelay > 0 && this.pickupDelay != 32767)
-            {
-                --this.pickupDelay;
-            }
+            // CraftBukkit start - Use wall time for pickup and despawn timers ///Lava-test - TODO what
+            int elapsedTicks = net.minecraft.server.MinecraftServer.currentTick - this.lastTick;
+            if (this.pickupDelay != 32767) this.pickupDelay -= elapsedTicks;
+            if (this.age != -32768) this.age += elapsedTicks;
+            this.lastTick = net.minecraft.server.MinecraftServer.currentTick;
+            // CraftBukkit end
 
             this.prevPosX = this.posX;
             this.prevPosY = this.posY;
@@ -156,10 +160,12 @@
                 this.motionY *= -0.5D;
             }
 
+            /* Craftbukkit start - moved up TODO the F
             if (this.age != -32768)
             {
                 ++this.age;
             }
+            // Craftbukkit end */
 
             this.handleWaterMovement();
 
@@ -248,6 +254,7 @@
                     }
                     else
                     {
+                        if (org.bukkit.craftbukkit.event.CraftEventFactory.callItemMergeEvent(this, other).isCancelled()) return false;  // CraftBukkit
                         itemstack1.grow(itemstack.getCount());
                         other.pickupDelay = Math.max(other.pickupDelay, this.pickupDelay);
                         other.age = Math.min(other.age, this.age);
@@ -314,6 +321,11 @@
         }
         else
         {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount)) {
+                return false;
+            }
+            // CraftBukkit end
             this.markVelocityChanged();
             this.health = (int)((float)this.health - amount);
 
