--- ../src-base/minecraft/net/minecraft/entity/item/EntityXPOrb.java
+++ ../src-work/minecraft/net/minecraft/entity/item/EntityXPOrb.java
@@ -25,16 +25,42 @@
     public int xpValue;
     private EntityPlayer closestPlayer;
     private int xpTargetColor;
+    // Paper start
+    public java.util.UUID sourceEntityId;
+    public java.util.UUID triggerEntityId;
+    public org.bukkit.entity.ExperienceOrb.SpawnReason reason = org.bukkit.entity.ExperienceOrb.SpawnReason.UNKNOWN;
+    //Paper end
 
     public EntityXPOrb(World worldIn, double x, double y, double z, int expValue)
     {
-        super(worldIn);
+        /*super(worldIn);
         this.setSize(0.5F, 0.5F);
         this.setPosition(x, y, z);
+        this(worldIn, x, y, z, expValue, null, null, null);
         this.rotationYaw = (float)(Math.random() * 360.0D);
         this.motionX = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D) * 2.0F);
         this.motionY = (double)((float)(Math.random() * 0.2D) * 2.0F);
         this.motionZ = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D) * 2.0F);
+        this.xpValue = expValue;*/
+        this(worldIn, z, z, z, expValue, null, null, null);
+    }
+    
+    //Craftbukkit start
+    public EntityXPOrb(World worldIn, double x, double y, double z, int expValue, org.bukkit.entity.ExperienceOrb.SpawnReason reason, Entity triggerId) {
+        this(worldIn, x, y, z, expValue, reason, triggerId, null);
+    }
+
+    public EntityXPOrb(World worldIn, double x, double y, double z, int expValue, org.bukkit.entity.ExperienceOrb.SpawnReason reason, Entity triggerId, Entity sourceId) {
+        super(worldIn);
+        this.sourceEntityId = sourceId != null ? sourceId.getUniqueID() : null;
+        this.triggerEntityId = triggerId != null ? triggerId.getUniqueID() : null;
+        this.reason = reason != null ? reason : org.bukkit.entity.ExperienceOrb.SpawnReason.UNKNOWN;
+        this.setSize(0.5F, 0.5F);
+        this.setPosition(x, y, z);
+        this.rotationYaw = (float)(Math.random() * 360.0D);
+        this.motionX = ((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D) * 2.0F);
+        this.motionY = ((float)(Math.random() * 0.2D) * 2.0F);
+        this.motionZ = ((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D) * 2.0F);
         this.xpValue = expValue;
     }
 
@@ -74,6 +100,7 @@
     public void onUpdate()
     {
         super.onUpdate();
+        EntityPlayer prevTarget = this.closestPlayer;// CraftBukkit - store old target
 
         if (this.delayBeforeCanPickup > 0)
         {
@@ -117,6 +144,17 @@
 
         if (this.closestPlayer != null)
         {
+            // CraftBukkit start
+            boolean cancelled = false;
+            if (this.closestPlayer != prevTarget) {
+                org.bukkit.event.entity.EntityTargetLivingEntityEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTargetLivingEvent(this, closestPlayer, org.bukkit.event.entity.EntityTargetEvent.TargetReason.CLOSEST_PLAYER);
+                net.minecraft.entity.EntityLivingBase target = event.getTarget() == null ? null : ((org.bukkit.craftbukkit.entity.CraftLivingEntity) event.getTarget()).getHandle();
+                closestPlayer = target instanceof EntityPlayer ? (EntityPlayer) target : null;
+                cancelled = event.isCancelled();
+            }
+
+            if (!cancelled && closestPlayer != null) {
+            // CraftBukkit end
             double d1 = (this.closestPlayer.posX - this.posX) / 8.0D;
             double d2 = (this.closestPlayer.posY + (double)this.closestPlayer.getEyeHeight() / 2.0D - this.posY) / 8.0D;
             double d3 = (this.closestPlayer.posZ - this.posZ) / 8.0D;
@@ -129,6 +167,7 @@
                 this.motionX += d1 / d4 * d5 * 0.1D;
                 this.motionY += d2 / d4 * d5 * 0.1D;
                 this.motionZ += d3 / d4 * d5 * 0.1D;
+            } //CB
             }
         }
 
@@ -218,15 +257,25 @@
 
                 if (!itemstack.isEmpty() && itemstack.isItemDamaged())
                 {
-                    float ratio = itemstack.getItem().getXpRepairRatio(itemstack);
-                    int i = Math.min(roundAverage(this.xpValue * ratio), itemstack.getItemDamage());
-                    this.xpValue -= roundAverage(i / ratio);
-                    itemstack.setItemDamage(itemstack.getItemDamage() - i);
+                    //Craftbukkit start - event
+                    //float ratio = itemstack.getItem().getXpRepairRatio(itemstack);
+                    //int i = Math.min(roundAverage(this.xpValue * ratio), itemstack.getItemDamage());
+                    int i = Math.min(this.xpToDurability(this.xpValue), itemstack.getItemDamage());
+//                    this.xpValue -= this.durabilityToXp(i);
+//                    itemstack.setItemDamage(itemstack.getItemDamage() - i);
+                    org.bukkit.event.player.PlayerItemMendEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerItemMendEvent(entityIn, this, itemstack, i);
+                    i = event.getRepairAmount();
+                    if (!event.isCancelled()) {
+                        this.xpValue -= this.durabilityToXp(i);
+                        itemstack.setItemDamage(itemstack.getItemDamage() - i);
+                    }
+                    //Craftbukkit end
                 }
 
                 if (this.xpValue > 0)
                 {
-                    entityIn.addExperience(this.xpValue);
+                    //entityIn.addExperience(this.xpValue);
+                    entityIn.addExperience(org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerExpChangeEvent(entityIn, this.xpValue).getAmount()); // CraftBukkit - this.value -> event.getAmount()
                 }
 
                 this.setDead();
@@ -234,12 +283,12 @@
         }
     }
 
-    private int durabilityToXp(int durability)
+    public int durabilityToXp(int durability) //Craftbukkit private -> public
     {
         return durability / 2;
     }
 
-    private int xpToDurability(int xp)
+    public int xpToDurability(int xp) //Craftbukkit private -> public
     {
         return xp * 2;
     }
@@ -296,6 +345,24 @@
 
     public static int getXPSplit(int expValue)
     {
+        // CraftBukkit start
+        if (expValue > 162670129) return expValue - 100000;
+        if (expValue > 81335063) return 81335063;
+        if (expValue > 40667527) return 40667527;
+        if (expValue > 20333759) return 20333759;
+        if (expValue > 10166857) return 10166857;
+        if (expValue > 5083423) return 5083423;
+        if (expValue > 2541701) return 2541701;
+        if (expValue > 1270849) return 1270849;
+        if (expValue > 635413) return 635413;
+        if (expValue > 317701) return 317701;
+        if (expValue > 158849) return 158849;
+        if (expValue > 79423) return 79423;
+        if (expValue > 39709) return 39709;
+        if (expValue > 19853) return 19853;
+        if (expValue > 9923) return 9923;
+        if (expValue > 4957) return 4957;
+        // CraftBukkit end
         if (expValue >= 2477)
         {
             return 2477;
