--- ../src-base/minecraft/net/minecraft/entity/projectile/EntityArrow.java
+++ ../src-work/minecraft/net/minecraft/entity/projectile/EntityArrow.java
@@ -47,9 +47,9 @@
         }
     });
     private static final DataParameter<Byte> CRITICAL = EntityDataManager.<Byte>createKey(EntityArrow.class, DataSerializers.BYTE);
-    private int xTile;
-    private int yTile;
-    private int zTile;
+    public int xTile; //Craftbukkit - private > public
+    public int yTile; //Craftbukkit - private > public
+    public int zTile; //Craftbukkit - private > public
     private Block inTile;
     private int inData;
     protected boolean inGround;
@@ -60,7 +60,7 @@
     private int ticksInGround;
     private int ticksInAir;
     private double damage;
-    private int knockbackStrength;
+    public int knockbackStrength; //Craftbukkit - private > public
 
     public EntityArrow(World worldIn)
     {
@@ -83,6 +83,7 @@
     {
         this(worldIn, shooter.posX, shooter.posY + (double)shooter.getEyeHeight() - 0.10000000149011612D, shooter.posZ);
         this.shootingEntity = shooter;
+        this.projectileSource = (org.bukkit.entity.LivingEntity) shooter.getBukkitEntity(); //Craftbukkit
 
         if (shooter instanceof EntityPlayer)
         {
@@ -340,6 +341,7 @@
     {
         Entity entity = raytraceResultIn.entityHit;
 
+        org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileHitEvent(this, raytraceResultIn); //Craftbukkit - event
         if (entity != null)
         {
             float f = MathHelper.sqrt(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
@@ -363,7 +365,14 @@
 
             if (this.isBurning() && !(entity instanceof EntityEnderman))
             {
-                entity.setFire(5);
+                //Craftbukkit start - add combust event
+//                entity.setFire(5);
+                org.bukkit.event.entity.EntityCombustByEntityEvent combustEvent = new org.bukkit.event.entity.EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 5);
+                org.bukkit.Bukkit.getPluginManager().callEvent(combustEvent);
+                if (!combustEvent.isCancelled()) {
+                    entity.setFire(combustEvent.getDuration());
+                }
+                //Craftbukkit end
             }
 
             if (entity.attackEntityFrom(damagesource, (float)i))
@@ -579,6 +588,7 @@
 
             if (flag)
             {
+                if (!org.lavapowered.lava.events.LavaEventFactory.allowPlayerPickupArrow(entityIn, this, this.getArrowStack())) { return; } //Lava-test - handle deprecated ArrowPickup event here
                 entityIn.onItemPickup(this, 1);
                 this.setDead();
             }
@@ -655,7 +665,16 @@
 
         if (EnchantmentHelper.getMaxEnchantmentLevel(Enchantments.FLAME, p_190547_1_) > 0)
         {
-            this.setFire(100);
+            //Craftbukkit start - event
+            org.bukkit.event.entity.EntityCombustEvent event = new org.bukkit.event.entity.EntityCombustEvent(this.getBukkitEntity(), 100);
+            this.world.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+            //Craftbukkit end
+
+            this.setFire(event.getDuration());
         }
     }
 
