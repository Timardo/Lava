--- ../src-base/minecraft/net/minecraft/entity/projectile/EntityPotion.java
+++ ../src-work/minecraft/net/minecraft/entity/projectile/EntityPotion.java
@@ -124,7 +124,7 @@
             {
                 this.applyWater();
             }
-            else if (!list.isEmpty())
+            else if (true || !list.isEmpty()) // CraftBukkit - Call event even if no effects to apply
             {
                 if (this.isLingering())
                 {
@@ -165,6 +165,7 @@
     {
         AxisAlignedBB axisalignedbb = this.getEntityBoundingBox().grow(4.0D, 2.0D, 4.0D);
         List<EntityLivingBase> list = this.world.<EntityLivingBase>getEntitiesWithinAABB(EntityLivingBase.class, axisalignedbb);
+        java.util.Map<org.bukkit.entity.LivingEntity, Double> affected = new java.util.HashMap<org.bukkit.entity.LivingEntity, Double>(); //Craftbukkit - add affected entites for event
 
         if (!list.isEmpty())
         {
@@ -182,11 +183,37 @@
                         {
                             d1 = 1.0D;
                         }
-
-                        for (PotionEffect potioneffect : p_190543_2_)
+                        //Craftbukkit start - add event logic here
+                        /*for (PotionEffect potioneffect : p_190543_2_)
                         {
-                            Potion potion = potioneffect.getPotion();
+                            Potion potion = potioneffect.getPotion();*/
+                        affected.put((org.bukkit.entity.LivingEntity) entitylivingbase.getBukkitEntity(), d1);
+                    }
+                }
+            }
+        }
 
+        org.bukkit.event.entity.PotionSplashEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPotionSplashEvent(this, affected);
+        if (!event.isCancelled() && p_190543_2_ != null && !p_190543_2_.isEmpty()) { // do not process effects if there are no effects to process
+            for (org.bukkit.entity.LivingEntity victim : event.getAffectedEntities()) {
+                if (!(victim instanceof org.bukkit.craftbukkit.entity.CraftLivingEntity)) {
+                    continue; //skip non-living entities
+                }
+                
+                EntityLivingBase entitylivingbase = ((org.bukkit.craftbukkit.entity.CraftLivingEntity) victim).getHandle();
+                double d1 = event.getIntensity(victim);
+
+                for (PotionEffect potioneffect : p_190543_2_) {
+                    Potion potion = potioneffect.getPotion();
+                    // CraftBukkit Abide by PVP settings - for players only!
+                    if (!this.world.pvpMode && this.getThrower() instanceof EntityPlayer && entitylivingbase instanceof EntityPlayer && entitylivingbase != this.getThrower()) {
+                        int i = Potion.getIdFromPotion(potion);
+                        // Block SLOWER_MOVEMENT, SLOWER_DIG, HARM, BLINDNESS, HUNGER, WEAKNESS and POISON potions
+                        if (i == 2 || i == 4 || i == 7 || i == 15 || i == 17 || i == 18 || i == 19) {
+                            continue;
+                        }
+                    }
+                    //Craftbukkit end do not indent to save patch size
                             if (potion.isInstant())
                             {
                                 potion.affectEntity(this, this.getThrower(), entitylivingbase, potioneffect.getAmplifier(), d1);
@@ -194,14 +221,11 @@
                             else
                             {
                                 int i = (int)(d1 * (double)potioneffect.getDuration() + 0.5D);
-
                                 if (i > 20)
                                 {
                                     entitylivingbase.addPotionEffect(new PotionEffect(potion, i, potioneffect.getAmplifier(), potioneffect.getIsAmbient(), potioneffect.doesShowParticles()));
                                 }
                             }
-                        }
-                    }
                 }
             }
         }
@@ -229,10 +253,17 @@
             entityareaeffectcloud.setColor(nbttagcompound.getInteger("CustomPotionColor"));
         }
 
+        // this.world.spawnEntity(entityareaeffectcloud);
+        org.bukkit.event.entity.LingeringPotionSplashEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callLingeringPotionSplashEvent(this, entityareaeffectcloud);
+        if (event.isCancelled() || entityareaeffectcloud.isDead) {
+            entityareaeffectcloud.isDead = true;
+            return;
+        }
+
         this.world.spawnEntity(entityareaeffectcloud);
     }
 
-    private boolean isLingering()
+    public boolean isLingering() //Craftbukkit - private -> public
     {
         return this.getPotion().getItem() == Items.LINGERING_POTION;
     }
