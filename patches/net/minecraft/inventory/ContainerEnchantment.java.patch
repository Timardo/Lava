--- ../src-base/minecraft/net/minecraft/inventory/ContainerEnchantment.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerEnchantment.java
@@ -25,7 +25,7 @@
 public class ContainerEnchantment extends Container
 {
     public IInventory tableInventory;
-    private final World worldPointer;
+    private World worldPointer; //Craftbukkit -final
     private final BlockPos position;
     private final Random rand;
     public int xpSeed;
@@ -33,6 +33,11 @@
     public int[] enchantClue;
     public int[] worldClue;
 
+    //Craftbukkit start - fields
+    private org.bukkit.craftbukkit.inventory.CraftInventoryView bukkitEntity = null;
+    private org.bukkit.entity.Player player;
+    
+
     @SideOnly(Side.CLIENT)
     public ContainerEnchantment(InventoryPlayer playerInv, World worldIn)
     {
@@ -52,6 +57,12 @@
                 super.markDirty();
                 ContainerEnchantment.this.onCraftMatrixChanged(this);
             }
+
+            //Craftbukkit method
+            @Override
+            public org.bukkit.Location getLocation() {
+                return new org.bukkit.Location(worldIn.getWorld(), position.getX(), position.getY(), position.getZ());
+            }
         };
         this.rand = new Random();
         this.enchantLevels = new int[3];
@@ -94,6 +105,7 @@
         {
             this.addSlotToContainer(new Slot(playerInv, k, 8 + k * 18, 142));
         }
+        player = (org.bukkit.entity.Player) playerInv.player.getBukkitEntity(); //Craftbukkit
     }
 
     protected void broadcastData(IContainerListener crafting)
@@ -158,7 +170,7 @@
         {
             ItemStack itemstack = inventoryIn.getStackInSlot(0);
 
-            if (!itemstack.isEmpty() && itemstack.isItemEnchantable())
+            if (!itemstack.isEmpty()/* && itemstack.isItemEnchantable()*/) // CraftBukkit - relax condition TODO rework to one-line event call
             {
                 if (!this.worldPointer.isRemote)
                 {
@@ -214,6 +226,41 @@
                         }
                     }
 
+                    // CraftBukkit start
+                    org.bukkit.craftbukkit.inventory.CraftItemStack item = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack);
+                    org.bukkit.enchantments.EnchantmentOffer[] offers = new org.bukkit.enchantments.EnchantmentOffer[3];
+                    for (int j = 0; j < 3; ++j) {
+                        org.bukkit.enchantments.Enchantment enchantment = (this.enchantClue[j] >= 0) ? org.bukkit.enchantments.Enchantment.getById(this.enchantClue[j]) : null;
+                        offers[j] = (enchantment != null) ? new org.bukkit.enchantments.EnchantmentOffer(enchantment, this.worldClue[j], this.enchantLevels[j]) : null;
+                    }
+
+                    org.bukkit.event.enchantment.PrepareItemEnchantEvent event = new org.bukkit.event.enchantment.PrepareItemEnchantEvent(player, this.getBukkitView(), this.worldPointer.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ()), item, offers, (int) power);
+                    event.setCancelled(!itemstack.isItemEnchantable());
+                    this.worldPointer.getServer().getPluginManager().callEvent(event);
+
+                    if (event.isCancelled()) {
+                        for (int j = 0; j < 3; ++j) {
+                            this.enchantLevels[j] = 0;
+                            this.enchantClue[j] = -1;
+                            this.worldClue[j] = -1;
+                        }
+                        return;
+                    }
+
+                    for (int j = 0; j < 3; j++) {
+                        org.bukkit.enchantments.EnchantmentOffer offer = event.getOffers()[j];
+                        if (offer != null) {
+                            this.enchantLevels[j] = offer.getCost();
+                            this.enchantClue[j] = offer.getEnchantment().getId();
+                            this.worldClue[j] = offer.getEnchantmentLevel();
+                        } else {
+                            this.enchantLevels[j] = 0;
+                            this.enchantClue[j] = -1;
+                            this.worldClue[j] = -1;
+                        }
+                    }
+                    // CraftBukkit end
+
                     this.detectAndSendChanges();
                 }
             }
@@ -249,6 +296,14 @@
                 {
                     playerIn.onEnchant(itemstack, i);
                     boolean flag = itemstack.getItem() == Items.BOOK;
+                    //Lava-test start - convert enchants and call the event
+                    java.util.Map<org.bukkit.enchantments.Enchantment, Integer> enchants = new java.util.HashMap<org.bukkit.enchantments.Enchantment, Integer>(); //convert enchats to bukkit's version for event
+                    for (EnchantmentData instance : list) enchants.put(org.bukkit.enchantments.Enchantment.getById(Enchantment.getEnchantmentID(instance.enchantment)), instance.enchantmentLevel);
+                    org.bukkit.craftbukkit.inventory.CraftItemStack item = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack);
+                    org.bukkit.event.enchantment.EnchantItemEvent event = new org.bukkit.event.enchantment.EnchantItemEvent((org.bukkit.entity.Player) playerIn.getBukkitEntity(), this.getBukkitView(), this.worldPointer.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ()), item, this.enchantLevels[id], enchants, id);
+                    this.worldPointer.getServer().getPluginManager().callEvent(event);
+                    if (event.isCancelled() || (event.getExpLevelCost() > playerIn.experienceLevel && !playerIn.capabilities.isCreativeMode) || event.getEnchantsToAdd().isEmpty()) return false;
+                    //Lava-test end
 
                     if (flag)
                     {
@@ -256,10 +311,20 @@
                         this.tableInventory.setInventorySlotContents(0, itemstack);
                     }
 
+                    //Lava-test start
+                    list.clear(); //clear the list to refill it with event enchants
+                    for (java.util.Map.Entry<org.bukkit.enchantments.Enchantment, Integer> entry : event.getEnchantsToAdd().entrySet()) {
+                        try {
+                            int enchantId = entry.getKey().getId();
+                            if (Enchantment.getEnchantmentByID(enchantId) == null) continue; //that's a wrong number!
+                            EnchantmentData weightedrandomenchant = new EnchantmentData(Enchantment.getEnchantmentByID(enchantId), entry.getValue());
+                            list.add(weightedrandomenchant);
+                        } catch (IllegalArgumentException e) {/*something's got wrong, ignore it TODO is it even possible?*/}
+                    }
+                    //Lava-test end
                     for (int j = 0; j < list.size(); ++j)
                     {
                         EnchantmentData enchantmentdata = list.get(j);
-
                         if (flag)
                         {
                             ItemEnchantedBook.addEnchantment(itemstack, enchantmentdata);
@@ -326,6 +391,11 @@
     {
         super.onContainerClosed(playerIn);
 
+        // CraftBukkit Start - If an enchantable was opened from a null location, set the world to the player's world, preventing a crash
+        if (this.worldPointer == null) {
+            this.worldPointer = playerIn.getEntityWorld();
+        }
+        // CraftBukkit end
         if (!this.worldPointer.isRemote)
         {
             this.clearContainer(playerIn, playerIn.world, this.tableInventory);
@@ -334,6 +404,7 @@
 
     public boolean canInteractWith(EntityPlayer playerIn)
     {
+        if (!this.checkReachable) return true; //Craftbukkit - override for null locations
         if (this.worldPointer.getBlockState(this.position).getBlock() != Blocks.ENCHANTING_TABLE)
         {
             return false;
@@ -412,4 +483,16 @@
 
         return itemstack;
     }
+
+    //Craftbukkit method
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting(this.tableInventory);
+        bukkitEntity = new org.bukkit.craftbukkit.inventory.CraftInventoryView(this.player, inventory, this);
+        return bukkitEntity;
+    }
 }
