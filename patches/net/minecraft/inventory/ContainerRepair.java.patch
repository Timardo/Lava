--- ../src-base/minecraft/net/minecraft/inventory/ContainerRepair.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerRepair.java
@@ -28,9 +28,15 @@
     private final BlockPos selfPosition;
     public int maximumCost;
     public int materialCost;
-    private String repairedItemName;
+    public String repairedItemName; //Craftbukkit - private -> public
     private final EntityPlayer player;
 
+    //Craftbukkit start - fields
+    private int lastLevelCost;
+    private org.bukkit.craftbukkit.inventory.CraftInventoryView bukkitEntity;
+    private InventoryPlayer playerInventory;
+    //Craftbukkit end
+
     @SideOnly(Side.CLIENT)
     public ContainerRepair(InventoryPlayer playerInventory, World worldIn, EntityPlayer player)
     {
@@ -39,6 +45,7 @@
 
     public ContainerRepair(InventoryPlayer playerInventory, final World worldIn, final BlockPos blockPosIn, EntityPlayer player)
     {
+        this.playerInventory = playerInventory; //Craftbukkit
         this.outputSlot = new InventoryCraftResult();
         this.inputSlots = new InventoryBasic("Repair", true, 2)
         {
@@ -178,7 +185,10 @@
 
                     if (l2 <= 0)
                     {
-                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        //Craftbukkit start - event TODO move to forge
+//                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        org.bukkit.craftbukkit.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY);
+                        //Craftbukkit end
                         this.maximumCost = 0;
                         return;
                     }
@@ -299,7 +309,10 @@
 
                     if (flag3 && !flag2)
                     {
-                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        //Craftbukkit start - event
+//                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        org.bukkit.craftbukkit.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY);
+                        //Craftbukkit end
                         this.maximumCost = 0;
                         return;
                     }
@@ -358,7 +371,10 @@
                 EnchantmentHelper.setEnchantments(map, itemstack1);
             }
 
-            this.outputSlot.setInventorySlotContents(0, itemstack1);
+            //Craftbukkit start - event
+//            this.outputSlot.setInventorySlotContents(0, itemstack1);
+            org.bukkit.craftbukkit.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), itemstack1);
+            //Craftbukkit end
             this.detectAndSendChanges();
         }
     }
@@ -390,6 +406,7 @@
 
     public boolean canInteractWith(EntityPlayer playerIn)
     {
+        if (!this.checkReachable) return true; //Craftbukkit - override for null virtual anvils
         if (this.world.getBlockState(this.selfPosition).getBlock() != Blocks.ANVIL)
         {
             return false;
@@ -471,4 +488,32 @@
 
         this.updateRepairOutput();
     }
+
+    //Craftbukkit start - methods
+    @Override
+    public void detectAndSendChanges() {
+        super.detectAndSendChanges();
+        for (int i = 0; i < this.listeners.size(); ++i) {
+            IContainerListener icrafting = this.listeners.get(i);
+
+            if (this.lastLevelCost != this.maximumCost) {
+                icrafting.sendWindowProperty(this, 0, this.maximumCost);
+            }
+        }
+
+        this.lastLevelCost = this.maximumCost;
+    }
+
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventory inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryAnvil(
+                new org.bukkit.Location(world.getWorld(), selfPosition.getX(), selfPosition.getY(), selfPosition.getZ()), this.inputSlots, this.outputSlot, this);
+        bukkitEntity = new org.bukkit.craftbukkit.inventory.CraftInventoryView(this.playerInventory.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    //Craftbukkit end
 }
