--- ../src-base/minecraft/net/minecraft/inventory/InventoryCrafting.java
+++ ../src-work/minecraft/net/minecraft/inventory/InventoryCrafting.java
@@ -13,8 +13,56 @@
     private final NonNullList<ItemStack> stackList;
     private final int inventoryWidth;
     private final int inventoryHeight;
-    private final Container eventHandler;
+    public final Container eventHandler; //Craftbukkit - private -> public
 
+    // CraftBukkit start - add fields
+    public net.minecraft.item.crafting.IRecipe currentRecipe;
+    public IInventory resultInventory;
+    public EntityPlayer owner;
+    private int maxStack = MAX_STACK;
+
+    public java.util.List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<org.bukkit.entity.HumanEntity>();
+
+    public void onOpen(org.bukkit.craftbukkit.entity.CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(org.bukkit.craftbukkit.entity.CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public java.util.List<ItemStack> getContents() {
+        return this.stackList;
+    }
+
+    public org.bukkit.event.inventory.InventoryType getInvType() {
+        return stackList.size() == 4 ? org.bukkit.event.inventory.InventoryType.CRAFTING : org.bukkit.event.inventory.InventoryType.WORKBENCH;
+    }
+
+    public org.bukkit.inventory.InventoryHolder getOwner() {
+        return (owner == null) ? null : owner.getBukkitEntity();
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+        resultInventory.setMaxStackSize(size);
+    }
+
+    @Override
+    public org.bukkit.Location getLocation() {
+        return owner.getBukkitEntity().getLocation();
+    }
+
+    public InventoryCrafting(Container container, int i, int j, EntityPlayer player) {
+        this(container, i, j);
+        this.owner = player;
+    }
+    // CraftBukkit end
+
     public InventoryCrafting(Container eventHandlerIn, int width, int height)
     {
         this.stackList = NonNullList.<ItemStack>withSize(width * height, ItemStack.EMPTY);
