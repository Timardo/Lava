--- ../src-base/minecraft/net/minecraft/inventory/InventoryMerchant.java
+++ ../src-work/minecraft/net/minecraft/inventory/InventoryMerchant.java
@@ -16,8 +16,43 @@
     private final NonNullList<ItemStack> slots = NonNullList.<ItemStack>withSize(3, ItemStack.EMPTY);
     private final EntityPlayer player;
     private MerchantRecipe currentRecipe;
-    private int currentRecipeIndex;
+    public int currentRecipeIndex; //Craftbukkit - private -> public
 
+    //Craftbukkit start - field, methods..
+    private int maxStack = MAX_STACK;
+
+    public java.util.List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<org.bukkit.entity.HumanEntity>();
+
+    public void onOpen(org.bukkit.craftbukkit.entity.CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(org.bukkit.craftbukkit.entity.CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public java.util.List<ItemStack> getContents() {
+        return this.slots;
+    }
+
+    public void setMaxStackSize(int i) {
+        maxStack = i;
+    }
+
+    public org.bukkit.inventory.InventoryHolder getOwner() {
+        return (merchant instanceof net.minecraft.entity.passive.EntityVillager) ? (org.bukkit.craftbukkit.entity.CraftVillager) ((net.minecraft.entity.passive.EntityVillager) this.merchant).getBukkitEntity() : null;
+    }
+
+    @Override
+    public org.bukkit.Location getLocation() {
+        return (merchant instanceof net.minecraft.entity.passive.EntityVillager) ? ((net.minecraft.entity.passive.EntityVillager) this.merchant).getBukkitEntity().getLocation() : null;
+    }
+    //Craftbukkit end
+
     public InventoryMerchant(EntityPlayer thePlayerIn, IMerchant theMerchantIn)
     {
         this.player = thePlayerIn;
@@ -110,7 +145,7 @@
 
     public int getInventoryStackLimit()
     {
-        return 64;
+        return maxStack; //Craftbukkit - 64 -> maxStack
     }
 
     public boolean isUsableByPlayer(EntityPlayer player)
