--- ../src-base/minecraft/net/minecraft/item/ItemBow.java
+++ ../src-work/minecraft/net/minecraft/item/ItemBow.java
@@ -5,6 +5,7 @@
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.init.Enchantments;
 import net.minecraft.init.Items;
@@ -18,6 +19,7 @@
 import net.minecraft.world.World;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.event.entity.EntityCombustEvent;
 
 public class ItemBow extends Item
 {
@@ -37,7 +39,7 @@
                 }
                 else
                 {
-                    return !(entityIn.getActiveItemStack().getItem() instanceof ItemBow) ? 0.0F : (float)(stack.getMaxItemUseDuration() - entityIn.getItemInUseCount()) / 20.0F;
+                    return entityIn.getActiveItemStack().getItem() != Items.BOW ? 0.0F : (float)(stack.getMaxItemUseDuration() - entityIn.getItemInUseCount()) / 20.0F;
                 }
             }
         });
@@ -51,7 +53,7 @@
         });
     }
 
-    protected ItemStack findAmmo(EntityPlayer player)
+    private ItemStack findAmmo(EntityPlayer player)
     {
         if (this.isArrow(player.getHeldItem(EnumHand.OFF_HAND)))
         {
@@ -111,7 +113,6 @@
                     {
                         ItemArrow itemarrow = (ItemArrow)(itemstack.getItem() instanceof ItemArrow ? itemstack.getItem() : Items.ARROW);
                         EntityArrow entityarrow = itemarrow.createArrow(worldIn, itemstack, entityplayer);
-                        entityarrow = this.customizeArrow(entityarrow);
                         entityarrow.shoot(entityplayer, entityplayer.rotationPitch, entityplayer.rotationYaw, 0.0F, f * 3.0F, 1.0F);
 
                         if (f == 1.0F)
@@ -135,8 +136,19 @@
 
                         if (EnchantmentHelper.getEnchantmentLevel(Enchantments.FLAME, stack) > 0)
                         {
-                            entityarrow.setFire(100);
+                            // entityarrow.setFire(100);
+                            EntityCombustEvent event = new EntityCombustEvent(entityarrow.getBukkitEntity(), 100);
+                            entityarrow.world.getServer().getPluginManager().callEvent(event);
+
+                            if (!event.isCancelled()) {
+                                entityarrow.setFire(event.getDuration());
+                            }
                         }
+                        org.bukkit.event.entity.EntityShootBowEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityShootBowEvent(entityplayer, itemstack, entityarrow, f);
+                        if (event.isCancelled()) {
+                            event.getProjectile().remove();
+                            return;
+                        }
 
                         stack.damageItem(1, entityplayer);
 
@@ -145,7 +157,15 @@
                             entityarrow.pickupStatus = EntityArrow.PickupStatus.CREATIVE_ONLY;
                         }
 
-                        worldIn.spawnEntity(entityarrow);
+                        // worldIn.spawnEntity(entityarrow);
+                        if (event.getProjectile() == entityarrow.getBukkitEntity()) {
+                            if (!worldIn.spawnEntity(entityarrow)) {
+                                if (entityplayer instanceof EntityPlayerMP) {
+                                    ((EntityPlayerMP) entityplayer).getBukkitEntity().updateInventory();
+                                }
+                                return;
+                            }
+                        }
                     }
 
                     worldIn.playSound((EntityPlayer)null, entityplayer.posX, entityplayer.posY, entityplayer.posZ, SoundEvents.ENTITY_ARROW_SHOOT, SoundCategory.PLAYERS, 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + f * 0.5F);
@@ -212,9 +232,4 @@
     {
         return 1;
     }
-
-    public EntityArrow customizeArrow(EntityArrow arrow)
-    {
-        return arrow;
-    }
 }
