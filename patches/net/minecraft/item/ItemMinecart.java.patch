--- ../src-base/minecraft/net/minecraft/item/ItemMinecart.java
+++ ../src-work/minecraft/net/minecraft/item/ItemMinecart.java
@@ -64,14 +64,40 @@
                 }
             }
 
+            ItemStack eventStack = stack.copy().splitStack(1);
+            org.bukkit.block.Block block2 = world.getWorld().getBlockAt(source.getBlockPos().getX(), source.getBlockPos().getY(), source.getBlockPos().getZ());
+            org.bukkit.craftbukkit.inventory.CraftItemStack craftItem = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(eventStack);
+            org.bukkit.event.block.BlockDispenseEvent event = new org.bukkit.event.block.BlockDispenseEvent(block2, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+            world.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) return stack;
+            if (!event.getItem().equals(craftItem)) {
+                eventStack = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getItem());
+                IBehaviorDispenseItem idispensebehavior = BlockDispenser.DISPENSE_BEHAVIOR_REGISTRY.getObject(eventStack.getItem());
+                if (idispensebehavior != IBehaviorDispenseItem.DEFAULT_BEHAVIOR && idispensebehavior != this) {
+                    idispensebehavior.dispense(source, eventStack);
+                    return stack;
+                }
+            }
+
+            eventStack = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getItem());
+            d0 = event.getVelocity().getX();
+            d1 = event.getVelocity().getY() - d3;
+            d2 = event.getVelocity().getZ();
+            ItemStack stackCopy = stack;
+            stack = eventStack;
             EntityMinecart entityminecart = EntityMinecart.create(world, d0, d1 + d3, d2, ((ItemMinecart)stack.getItem()).minecartType);
+            stack = stackCopy; //Lava-test - revert
 
             if (stack.hasDisplayName())
             {
                 entityminecart.setCustomNameTag(stack.getDisplayName());
             }
 
-            world.spawnEntity(entityminecart);
+            //Craftbukkit start - only shrink the stack if the minecart can actually spawn
+            // world.spawnEntity(entityminecart);
+            if (world.spawnEntity(entityminecart))
+            //Craftbukkit end
             stack.shrink(1);
             return stack;
         }
@@ -119,7 +145,10 @@
                     entityminecart.setCustomNameTag(itemstack.getDisplayName());
                 }
 
-                worldIn.spawnEntity(entityminecart);
+                //Craftbukkit start - if the spawn is cancelled, return pass and don't shrink the itemstack
+                // worldIn.spawnEntity(entityminecart);
+                if (!worldIn.spawnEntity(entityminecart)) return EnumActionResult.PASS;
+                //Craftbukkit end
             }
 
             itemstack.shrink(1);
