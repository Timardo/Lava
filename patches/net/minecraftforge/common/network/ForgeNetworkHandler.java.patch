--- ../src-base/minecraft/net/minecraftforge/common/network/ForgeNetworkHandler.java
+++ ../src-work/minecraft/net/minecraftforge/common/network/ForgeNetworkHandler.java
@@ -20,6 +20,7 @@
 package net.minecraftforge.common.network;
 
 import java.util.EnumMap;
+
 import net.minecraftforge.common.ForgeModContainer;
 import net.minecraftforge.fml.common.network.FMLEmbeddedChannel;
 import net.minecraftforge.fml.common.network.FMLOutboundHandler;
@@ -28,15 +29,12 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ForgeNetworkHandler
-{
+public class ForgeNetworkHandler {
     private static EnumMap<Side, FMLEmbeddedChannel> channelPair;
 
-    public static void registerChannel(ForgeModContainer forgeModContainer, Side side)
-    {
+    public static void registerChannel(ForgeModContainer forgeModContainer, Side side) {
         channelPair = NetworkRegistry.INSTANCE.newChannel(forgeModContainer, "FORGE", new ForgeRuntimeCodec());
-        if (side == Side.CLIENT)
-        {
+        if (side == Side.CLIENT) {
             addClientHandlers();
         }
 
@@ -47,11 +45,14 @@
     }
 
     @SideOnly(Side.CLIENT)
-    private static void addClientHandlers()
-    {
+    private static void addClientHandlers() {
         FMLEmbeddedChannel clientChannel = channelPair.get(Side.CLIENT);
         String handlerName = clientChannel.findChannelHandlerNameForType(ForgeRuntimeCodec.class);
         clientChannel.pipeline().addAfter(handlerName, "DimensionHandler", new DimensionMessageHandler());
         clientChannel.pipeline().addAfter(handlerName, "FluidIdRegistryHandler", new FluidIdRegistryMessageHandler());
     }
+
+    public static FMLEmbeddedChannel getServerChannel() {
+        return channelPair.get(Side.SERVER);
+    }
 }
